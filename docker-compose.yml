version: '3.7'
services:
  app:
    image: skep/app:${BUILD_TAG:-latest}
    networks:
      - skep
    ports:
      - "8080:8080"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      # Used for internal communication only. Do NOT publish this port:
      SKEP_PRIVATE_PORT: '6666'

  agent:
    image: skep/agent:${BUILD_TAG:-latest}
    networks:
      - skep
    deploy:
      mode: global
    volumes:
      - "/dev:/hostfs/dev:ro"
      - "/etc:/hostfs/etc:ro"
      - "/proc:/hostfs/proc:ro"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    environment:
      SKEP_APP_URL: http://app:6666
      SKEP_CHARTS_URL: http://charts:8080
      DISKS:
      FILE_SYSTEMS:
      NETWORK_INTERFACES:
      COLLECT_INTERVAL:
      SAMPLE_DURATION:
      LOG_LEVEL:
      SKEP_HOST:

  charts:
    image: skep/charts:${BUILD_TAG:-latest}
    networks:
      - skep
    deploy:
      mode: replicated
      replicas: 1
    environment:
      SKEP_APP_URL: http://app:6666
      SKEP_CHARTS_URL: http://charts:8080
      LOG_LEVEL:

  monitor:
    image: skep/monitor:${BUILD_TAG:-latest}
    networks:
      - skep
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.role == manager]
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    environment:
      SKEP_APP_URL: http://app:6666
      SKEP_CHARTS_URL: http://charts:8080
      SERVICE_URL_TEMPLATE:
      IMAGE_URL_TEMPLATE: https://hub.docker.com/r/{organization}/{repository}

  database:
    image: postgres:12
    networks:
      - skep
    deploy:
      mode: replicated
      replicas: 1
    environment:
      PGDATA: /var/lib/postgres/data
      POSTGRES_HOST_AUTH_METHOD: trust
    # To persist database storage, use a configuration similar to this:
    # volumes:
    #   - "/shared/network/storage/skep/:/var/lib/postgres/data/:rw"

networks:
  skep: {}
